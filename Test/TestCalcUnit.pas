unit TestCalcUnit;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, CalcUnit;

type
  // Test methods for class TCalc

  TestTCalc = class(TTestCase)
  strict private
    FCalc: TCalc;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAdd;
    procedure TestSub;
    [Test]
    [TestCase('TestA', '1,2,3')]
    [TestCase('TestB', '3,4,7')]
    procedure TestAdd2(const A: Integer; const B: Integer; const Result: Integer);
  end;

implementation

procedure TestTCalc.SetUp;
begin
  FCalc := TCalc.Create;
end;

procedure TestTCalc.TearDown;
begin
  FCalc.Free;
  FCalc := nil;
end;

procedure TestTCalc.TestAdd;
var
  ReturnValue: Integer;
  y: Integer;
  x: Integer;
begin
  // TODO: Setup method call parameters
  ReturnValue := FCalc.Add(x, y);
  // TODO: Validate method results
end;

procedure TestTCalc.TestAdd2(const A, B, Result: Integer);
var
  V: Integer;
begin
  V := FCalc.Add(A,B);
  CheckEquals(Result, V, 'Values match');
end;

procedure TestTCalc.TestSub;
var
  ReturnValue: Integer;
  y: Integer;
  x: Integer;
begin
  // TODO: Setup method call parameters
  ReturnValue := FCalc.Sub(x, y);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCalc.Suite);
end.

